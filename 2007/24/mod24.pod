
=for advent_year 2007

=for advent_day 24

=for advent_title Checking the list twice

=for advent_author David Westbrook

Santa has a long list of contacts to maintain every year with all those nice (and naughty!) children to deliver presents to.
M<Text::vCard> (and M<Text::vCard::Addressbook>) can be usedN<1> to take such a list from a custom
(database, CSVN<2>, elf-driven, etc) address book and create a standard
(A<http://www.faqs.org/rfcs/rfc2426.html|RFC 2426>) addressbook,
such as this L<mod24.vcf> file for your favorite vCard-supporting application.N<3>
One of the entries is shown below, both as the generated vCard entry and in action.

<div style="float:right">
<br><br><br><br>
<img src="mod24.jpg">
</div>

=begin pre

BEGIN:VCARD
N:Simpson;Bart;;;
ADR;TYPE=home:;;742 Evergreen Terrace;Springfield;ST;0000;USA
NICKNAME:Kid2
VERSION:1
TEL;TYPE=home:555-FAKE
NOTE:Really wants a slingshot
UID:SLEIGHLIST2
FN:Bart Simpson
END:VCARD

=end pre

<br clear="all">

=sourcedcode mod24.pl

<a name="1"></a>1.
Took some trial and error along with this
A<http://www.frankl.info/wordpress/uncategorized/howto-create-vcards-with-perl|Howto create vCards with perl> article by Michael Frankl
for a phone number example.

<a name="2"></a>2.
In this example we use (lines 4-5) a (bare-bones) hand-rolled CSV reader. For any actual use,
M<Text::CSV>,
M<DBD::CSV>,
M<DBD::AnyData>, or the like can (should) be used instead for robustness.

<a name="3"></a>3.
Screenshot is from
A<http://www.micro-progs.com/vcardorganizer/|vCardOrganizer 1.2.5>
(neutral usage -- just selected from search results).

