=head1 NAME

On the ... which day again?!?

=head1 AUTHOR

David Westbrook

=for advent_year 2007

=for advent_day 1

=for advent_title On the ... which day again?!?

=for advent_author David Westbrook

<img src="google12.png"  style="float: right; margin-right: 15px" alt="gcal" />

Is your true love forgetful? Well, here's a little reminder to him or her for your twelve days of gifts.
[L<mod1a.pl|#mod1a.pl>]

Many things have a schedule of events or calendar of some kind.
iCal (A<http://www.ietf.org/rfc/rfc2445.txt|RFC 2445>) is the standard for people to share calendars with one another,
and M<Data::ICal> provides perl with ability to both parse and generate calendar files.

Have event information or dates stored in a database or just listed in a file? Export them out into an iCalendar .ics file to be read by your favorite (Sunbird, Google Calendar, Outlook, etc) calendaring application.


=head2 Perl Advent Calendars

Now, let's take all of the Perl Advent entries to date, going back to 2000.  
First, we'll scrape the A<http://perladvent.pm.org/archives-Yd.html|archive page>
with the script L<get_links.pl> to create an AoH L<links.dat> data file.
Now we can create our calendar file with a F<Data::ICal> script.
[L<mod1b.pl|#mod1b.pl>]

The resulting file is L<perladvent.ics> which can be loaded as a remote calendar in your favorite application, as in these screenshots of
L<Thunderbird|thunderbird.png>
and L<Google Calendar|google.pdf>.

For this holiday season, you can "open the window" each day by re-generating this year's (or really any year 2000-2007) events with a combination of the scraper and F<Data::ICal> scripts mentioned above. Or the simpler approach of just a few reminders on the calendar in the form of L<reminders.ics> generated by L<reminders.pl>.
[L<mod1c.pl|#mod1c.pl>]

=head2 Parsing example

Using a calendaring application to maintain a personal or organization calendar? Want those events custom embedded in your web pages or application? F<Data::ICal> can parse the calendar file and provide easy access to the event data, such as taking our L<perladvent.ics> and creating L<perladvent.html>.
[L<mod1d.pl|#mod1d.pl>]

This allows the full leveraging of established calendaring applications for maintaining calendars, reducing much wheel-reinvention, leaving more time for milk & cookies.

<br clear="all" />

<a name="mod1a.pl"></a>

=head2 L<mod1a.pl>

This script generates L<twelve.ics>, shown in the Google Calendar screenshot above.

Y<mod1a.pl>

<a name="mod1b.pl"></a>

=head2 L<mod1b.pl>

This script generates L<perladvent.ics> from an AoH data file.

Y<mod1b.pl>

<a name="mod1c.pl"></a>

=head2 L<mod1c.pl>

This script generates a calendar for a specific year from the Perl Advent Calendar archives.

Y<mod1c.pl>

<a name="mod1d.pl"></a>

=head2 L<mod1d.pl>

This script generates L<perladvent.html> from an ICal file.

Y<mod1d.pl>

